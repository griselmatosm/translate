{"version":3,"sources":["contexts/LanguageContext.js","components/Field.js","contexts/ColorContext.js","components/Button.js","components/UserCreate.js","components/LanguageSelector.js","components/App.js","index.js"],"names":["Context","React","createContext","LanguageStore","state","language","onLanguageChange","setState","Provider","value","this","props","children","Component","Field","text","context","className","contextType","LanguageContext","Button","color","Consumer","renderSubmit","ColorContext","renderButton","UserCreate","LanguageSelector","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KAEMA,EAAUC,IAAMC,cAAc,WAEvBC,EAAb,4MACEC,MAAQ,CAAEC,SAAU,WADtB,EAGEC,iBAAmB,SAACD,GAClB,EAAKE,SAAS,CAAEF,cAJpB,uDAQI,OAAO,kBAACL,EAAQQ,SAAT,CAAkBC,MAAK,2BAAOC,KAAKN,OAAZ,IAAmBE,iBAAkBI,KAAKJ,oBAAqBI,KAAKC,MAAMC,cAR5G,GAAmCX,IAAMY,WAY1Bb,ICbTc,E,uKAGF,IAAMC,EAAiC,YAA1BL,KAAKM,QAAQX,SAAyB,OAAS,SAC5D,OACE,yBAAKY,UAAU,YACb,+BAAQF,GACR,qC,GAPYd,IAAMY,WAApBC,EACGI,YAAcC,EAYRL,QCdAb,MAAMC,gBCEfkB,E,2KAESf,GACX,MAAoB,YAAbA,EAAyB,SAAW,W,mCAEhCgB,GAAQ,IAAD,OAClB,OACE,4BAAQJ,UAAS,oBAAeI,IAC9B,kBAACF,EAAgBG,SAAjB,MAA2B,gBAAGjB,EAAH,EAAGA,SAAH,OAAkB,EAAKkB,aAAalB,S,+BAI3D,IAAD,OACP,OAAO,kBAACmB,EAAaF,SAAd,MAAwB,SAACD,GAAD,OAAW,EAAKI,aAAaJ,U,GAb3CpB,IAAMY,WAArBO,EACGF,YAAcC,EAgBRC,QCRAM,EATI,WACf,OACI,yBAAKT,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNU,E,uKAEM,IAAD,OACP,OACE,iDAEE,uBAAGV,UAAU,UAAUW,QAAS,kBAAM,EAAKZ,QAAQV,iBAAiB,cACpE,uBAAGW,UAAU,UAAUW,QAAS,kBAAM,EAAKZ,QAAQV,iBAAiB,mB,GAP7CL,IAAMY,WAA/Bc,EACGT,YAAcC,EAYRQ,QCMAE,E,uKAbX,OACE,yBAAKZ,UAAU,gBACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAACO,EAAahB,SAAd,CAAuBC,MAAO,OAC5B,kBAAC,EAAD,a,GARMR,IAAMY,WCDxBiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.02f560c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext('spanish'); //default value como argumento\r\n\r\nexport class LanguageStore extends React.Component {\r\n  state = { language: 'english' };\r\n\r\n  onLanguageChange = (language) => {\r\n    this.setState({ language });\r\n  };\r\n\r\n  render() {\r\n    return <Context.Provider value={{ ...this.state, onLanguageChange: this.onLanguageChange }}>{this.props.children}</Context.Provider>;\r\n  }\r\n}\r\n\r\nexport default Context;\r\n","import React from 'react';\r\nimport LanguageContext from '../contexts/LanguageContext';\r\n\r\nclass Field extends React.Component {\r\n  static contextType = LanguageContext;\r\n  render() {\r\n    const text = this.context.language === 'english' ? 'Name' : 'Nombre';\r\n    return (\r\n      <div className=\"ui field\">\r\n        <label>{text}</label>\r\n        <input />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import React from 'react';\r\n\r\nexport default React.createContext(); ","import React from 'react';\r\nimport LanguageContext from '../contexts/LanguageContext';\r\nimport ColorContext from '../contexts/ColorContext';\r\n\r\nclass Button extends React.Component {\r\n  static contextType = LanguageContext; //equivalente a Button.contextType = LanguageContext\r\n  renderSubmit(language) {\r\n    return language === 'english' ? 'Submit' : 'Enviar';\r\n  }\r\n  renderButton(color) {\r\n    return (\r\n      <button className={`ui button ${color}`}>\r\n        <LanguageContext.Consumer>{({ language }) => this.renderSubmit(language)}</LanguageContext.Consumer>\r\n      </button>\r\n    );\r\n  }\r\n  render() {\r\n    return <ColorContext.Consumer>{(color) => this.renderButton(color)}</ColorContext.Consumer>;\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Field from './Field';\r\nimport Button from './Button';\r\n\r\nconst UserCreate = () => {\r\n    return (\r\n        <div className=\"ui form\">\r\n            <Field />\r\n            <Button />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCreate;\r\n","import React from 'react';\r\nimport LanguageContext from '../contexts/LanguageContext';\r\n\r\nclass LanguageSelector extends React.Component {\r\n  static contextType = LanguageContext;\r\n  render() {\r\n    return (\r\n      <div>\r\n        Select a language\r\n        <i className=\"flag uk\" onClick={() => this.context.onLanguageChange('english')} />\r\n        <i className=\"flag es\" onClick={() => this.context.onLanguageChange('spanish')} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LanguageSelector;\r\n","import React from 'react';\nimport UserCreate from './UserCreate';\nimport { LanguageStore } from '../contexts/LanguageContext';\nimport ColorContext from '../contexts/ColorContext';\nimport LanguageSelector from './LanguageSelector';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <LanguageStore>\n          <LanguageSelector />\n          <ColorContext.Provider value={'red'}>\n            <UserCreate />\n          </ColorContext.Provider>\n        </LanguageStore>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}